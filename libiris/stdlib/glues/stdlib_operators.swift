//
//  stdlib_operators.swift
//
//  Bridging code for primitive handlers. This file is auto-generated; do not edit directly.
//

import Foundation

func stdlib_loadOperators(into registry: OperatorRegistry) {
    registry.infix("^", 1300, .right)
    registry.prefix("+", 1298, reducer: reductionForPositiveOperator)
    registry.prefix("-", 1298, reducer: reductionForNegativeOperator)
    registry.infix("*", 1296, .left)
    registry.infix("/", 1296, .left)
    registry.infix("div", 1296, .left)
    registry.infix("mod", 1296, .left)
    registry.infix("+", 1290, .left)
    registry.infix("-", 1290, .left)
    registry.infix("<", 540, .left)
    registry.infix("≤", 540, .left)
    registry.infix("=", 540, .left)
    registry.infix("≠", 540, .left)
    registry.infix(">", 540, .left)
    registry.infix("≥", 540, .left)
    registry.prefix("NOT", 400)
    registry.infix("AND", 398, .left)
    registry.infix("OR", 396, .left)
    registry.infix("XOR", 394, .left)
    registry.infix("is_before", 540, .left)
    registry.infix("is_not_after", 540, .left)
    registry.infix("is_same_as", 540, .left)
    registry.infix("is_not_same_as", 540, .left)
    registry.infix("is_after", 540, .left)
    registry.infix("is_not_before", 540, .left)
    registry.infix("begins_with", 542, .left)
    registry.infix("ends_with", 542, .left)
    registry.infix("contains", 542, .left)
    registry.infix("is_in", 542, .left)
    registry.infix("&", 340, .left)
    registry.infix("is_a", 540, .left)
    registry.infix("as", 350, .left)
    registry.prefix("to", conjunction: "run", 80)
    registry.prefix("to", conjunction: "run", 80)
    registry.prefix("set", conjunction: "to", 80)
    registry.prefix("if", conjunction: "then", alternate: "else", 101)
    registry.prefix("while", conjunction: "repeat", 101)
    registry.prefix("repeat", conjunction: "while", 101)
    registry.prefix("tell", conjunction: "to", 101)
    registry.infix("of", 1100, .right)
    registry.infix("at", 1110, .right)
    registry.infix("named", 1110, .left)
    registry.infix("id", 1110, .left)
    registry.infix("from", 1110, .left)
    registry.infix("whose", 1110, .left)
    registry.infix("thru", 1120, .left)
    registry.prefix("first", 1130)
    registry.prefix("middle", 1130)
    registry.prefix("last", 1130)
    registry.prefix("any", 1130)
    registry.prefix("every", 1130)
    registry.infix("before", 1126, .left)
    registry.infix("after", 1126, .left)
    registry.prefix("before", 1106)
    registry.prefix("after", 1106)
    registry.atom("beginning")
    registry.atom("end")
}
