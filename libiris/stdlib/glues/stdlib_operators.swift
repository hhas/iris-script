//
//  stdlib_operators.swift
//
//  Bridging code for primitive handlers. This file is auto-generated; do not edit directly.
//

import Foundation

func stdlib_loadOperators(into registry: OperatorRegistry) {
    registry.add([.expression, .keyword("&"), .expression], 340, .left, reductionForInfixOperator)
    registry.add([.expression, .keyword(["*", "×"]), .expression], 1296, .left, reductionForInfixOperator)
    registry.add([.expression, .keyword(["+", "＋"]), .expression], 1290, .left, reductionForInfixOperator)
    registry.add([.expression, .keyword(["-", "－", "−", "﹣"]), .expression], 1290, .left, reductionForInfixOperator)
    registry.add([.expression, .keyword(["/", "÷"]), .expression], 1296, .left, reductionForInfixOperator)
    registry.add([.expression, .keyword("<"), .expression], 540, .left, reductionForInfixOperator)
    registry.add([.expression, .keyword(["=", "=="]), .expression], 540, .left, reductionForInfixOperator)
    registry.add([.expression, .keyword(">"), .expression], 540, .left, reductionForInfixOperator)
    registry.add([.expression, .keyword("AND"), .expression], 398, .left, reductionForInfixOperator)
    registry.add([.keyword("NOT"), .expression], 400, .left, reductionForPrefixOperator)
    registry.add([.expression, .keyword("OR"), .expression], 396, .left, reductionForInfixOperator)
    registry.add([.expression, .keyword("XOR"), .expression], 394, .left, reductionForInfixOperator)
    registry.add([.expression, .keyword(["^", "to_the_power_of"]), .expression], 1300, .right, reductionForInfixOperator)
    registry.add([.expression, .keyword("after"), .expression], 1126, .right, reductionForInfixOperator)
    registry.add([.keyword(["any", "some"]), .expression], 1130, .right, reductionForPrefixOperator)
    registry.add([.expression, .keyword("as"), .expression], 350, .left, reductionForInfixOperator)
    registry.add([.expression, .keyword(["at", "index"]), .expression], 1110, .right, reductionForInfixOperator)
    registry.add([.expression, .keyword("before"), .expression], 1126, .right, reductionForInfixOperator)
    registry.add([.keyword("beginning")], 1106, .right, reductionForAtomOperator)
    registry.add([.expression, .keyword("begins_with"), .expression], 542, .left, reductionForInfixOperator)
    registry.add([.expression, .keyword("contains"), .expression], 542, .left, reductionForInfixOperator)
    registry.add([.expression, .keyword("div"), .expression], 1296, .left, reductionForInfixOperator)
    registry.add([.keyword("end")], 1106, .right, reductionForAtomOperator)
    registry.add([.expression, .keyword("ends_with"), .expression], 542, .left, reductionForInfixOperator)
    registry.add([.keyword(["every", "all"]), .expression], 1130, .right, reductionForPrefixOperator)
    registry.add([.keyword("first"), .expression], 1130, .right, reductionForPrefixOperator)
    registry.add([.expression, .keyword("from"), .expression], 1110, .right, reductionForInfixOperator)
    registry.add([.expression, .keyword("id"), .expression], 1110, .right, reductionForInfixOperator)
    registry.add([.keyword("if"), .expressionNamed("condition"), .keyword("then"), .expressionNamed("action"), .optional([.keyword("else"),.expressionNamed("alternative_action")])], 101, .left, reductionForPrefixOperatorWithConjunctionAndAlternate)
    registry.add([.expression, .keyword("is_a"), .expression], 540, .left, reductionForInfixOperator)
    registry.add([.expression, .keyword("is_after"), .expression], 540, .left, reductionForInfixOperator)
    registry.add([.expression, .keyword("is_before"), .expression], 540, .left, reductionForInfixOperator)
    registry.add([.expression, .keyword("is_in"), .expression], 542, .left, reductionForInfixOperator)
    registry.add([.expression, .keyword(["is_not_after", "is_before_or_same_as"]), .expression], 540, .left, reductionForInfixOperator)
    registry.add([.expression, .keyword(["is_not_before", "is_same_as_or_after"]), .expression], 540, .left, reductionForInfixOperator)
    registry.add([.expression, .keyword("is_not_same_as"), .expression], 540, .left, reductionForInfixOperator)
    registry.add([.expression, .keyword("is_same_as"), .expression], 540, .left, reductionForInfixOperator)
    registry.add([.keyword("last"), .expression], 1130, .right, reductionForPrefixOperator)
    registry.add([.keyword("middle"), .expression], 1130, .right, reductionForPrefixOperator)
    registry.add([.expression, .keyword("mod"), .expression], 1296, .left, reductionForInfixOperator)
    registry.add([.expression, .keyword("named"), .expression], 1110, .right, reductionForInfixOperator)
    registry.add([.keyword(["negative", "-", "－", "−", "﹣"]), .expressionNamed("right")], 1298, .left, reductionForNegativeOperator)
    registry.add([.expression, .keyword("of"), .expression], 1100, .right, reductionForInfixOperator)
    registry.add([.keyword(["positive", "+", "＋"]), .expressionNamed("right")], 1298, .left, reductionForPositiveOperator)
    registry.add([.keyword("repeat"), .expressionNamed("condition"), .keyword("while"), .expressionNamed("action")], 101, .left, reductionForPrefixOperatorWithConjunction)
    registry.add([.expression, .keyword("returning"), .expression], 300, .left, reductionForInfixOperator)
    registry.add([.keyword("set"), .expressionNamed("name"), .keyword("to"), .expressionNamed("value")], 80, .left, reductionForInfixOperator)
    registry.add([.keyword("tell"), .expressionNamed("target"), .keyword("to"), .expressionNamed("action")], 101, .left, reductionForPrefixOperatorWithConjunction)
    registry.add([.expression, .keyword(["thru", "through"]), .expression], 1120, .right, reductionForInfixOperator)
    registry.add([.keyword("to"), .expressionNamed("interface"), .keyword("run"), .expressionNamed("action")], 80, .left, reductionForPrefixOperatorWithConjunction)
    registry.add([.keyword("when"), .expressionNamed("interface"), .keyword("run"), .expressionNamed("action")], 80, .left, reductionForPrefixOperatorWithConjunction)
    registry.add([.keyword("while"), .expressionNamed("condition"), .keyword("repeat"), .expressionNamed("action")], 101, .left, reductionForPrefixOperatorWithConjunction)
    registry.add([.expression, .keyword(["whose", "where"]), .expression], 1110, .right, reductionForInfixOperator)
    registry.add([.expression, .keyword(["≠", "<>"]), .expression], 540, .left, reductionForInfixOperator)
    registry.add([.expression, .keyword(["≤", "<="]), .expression], 540, .left, reductionForInfixOperator)
    registry.add([.expression, .keyword(["≥", ">="]), .expression], 540, .left, reductionForInfixOperator)
}
